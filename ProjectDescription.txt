Project Description:
(a)Platform:
We used the CS Undergrad Oracle installation and provided PHP/Apache.

(b)Functionality:
Our project models a swimming pool, where we have two separate interfaces for our two main groups of users in our system: Patrons and Staff. The interfaces are determined by the role’s login. For example, a lifeguard staff can only view his own information and no one else’s.

Patrons are the customers visiting the swimming pool. In order for Patrons to be in our system, they must have a membership. Patrons’ interface allows them to view pool location information, including phone number, address, and hours, and rooms; purchase and manage memberships online; view their latest visit time/date; reserve pool lockers; as well as manage their dependents. For example, patrons can update their membership status through purchases of different membership lengths; lease specific pool lockers and view their status; and update their list of dependent patrons through inputting their dependents’ information into the interface, if they have any.

Staff includes two categories, Lifeguards and Cleaning staff. All staff are able to view their shifts, pool equipment statuses, and the maintenance statuses of pool rooms and lockers at their location. Lifeguards are able to view who their superior/senior lifeguard is. Cleaning staff are able to update room and pool equipment statuses. For example, all staff are able to request to see all of their shifts in the past month or year, as well as their personal information and YTD earnings; all staff can also view the number of certain equipment at their location, then have cleaning staff buy more and update the equipment count through input; and cleaning staff can add additional notes on a certain room after cleaning or inspection through text input.

Also, the system is able to show the different location situation, such as location’s ID, location’s name and the number of rooms it has.

All the queries are added, including Join, Aggregation, Group-by and Division query.

Schema Changes:
#1 - Location Schema: "Opening_Time" and "Closing_Time" field types changed from TIME to SMALLINT. This is because Oracle does not have a time datatype that we felt could appropriately represent these two fields.
#2 - Visits schema: Removed "Time" field and changed name of the field "date" to "visitdate". Removed the "Time" field because we didn't feel that we needed to store that information for each patron's visit.
#3 - PatronLeasesLocker schema: Added "LocationID" to schema. This was because Oracle does not allow you to have foreign keys that are not unique in the parent table. Therefore, I added LocationID, so that we could keep Locker_Num as a foreign key.
#4 - Shift: Changed "Start_Time" and "End_Time" field type from TIME to SMALLINT to maintain consistency with our representation of time in other schemas. Using SMALLINT also saves us space.
#5 - StaffWorksShift: Changed "Start_Time" and "End_Time" field type from TIME to SMALLINT to maintain consistency with our representation of time in other schemas. Using SMALLINT also saves us space.
#6 - Room: Made "Room_Type" field into a foreign key of RoomCapacity. Our TA suggested this to us after handing in Milestone 3.
#7 - Renamed attributes Condition in Locker and Room to Locker_Condition and Room_Condition respectively. The XAMPP server did not like the attribute name Condition.
#8 - MembershipExpiry - Added PatronID as a Primary Key as it did not work well with only Start_Date and Amount_Paid as Primary Keys. 
