Project Description:
(a)Platform:
We used php, mysql, and apache for our project platform.

(b)Functionality:
Our project models the database for a swimming pool chain.
There are two separate interfaces for our two main groups of users in our
system: Patrons and Staff.

Patrons are the customers visiting the swimming pool. The Patronsâ€™ interface allows
users to view selected pool location information (i.e. phone number, address,
opening and closing hours, street, city, postal code, province), the empty
lockers available at the location (and their condition), and the facilities at
the location.

The Patron's interface also allows users to view their patron information (name, dob,
sex, phone #, postal code, street, city, province), the memberships purchased
by themselves, their dependents, all of their visits to each location,
and the lockers they currently lease.

Finally, the Patrons' interface allows patrons to purchase and remove memberships;
add and remove dependents; add, update, and remove locker leases, and remove all
of their patron information from the database.

The Staff interface includes two categories, Lifeguards and Cleaning staff. All staff are
able to view their own shifts and their own staff information (i.e. name, dob,
sex, pay rate, ytd pay, hours worked in current pay period, location of work,
cpr certification expiry date, and their supervisor), pool equipment statuses,
and the maintenance statuses of pool rooms and lockers at their location.

The Staff interface allows staff to see a list of all current staff members
(lifeguards, cleaning staff, and others), as well as all shifts worked.

Finally, the Staff interface allows staff information to be added, updated, or deleted.
Plus, shift times can be added and the staff members who worked those shifts can be recorded.

Also, the system is able to show the aggregated location information, such as
the number of rooms it has or the locations that contain all possible facilities.

All the queries are added, including Join, Aggregation, Group-by and Division query.

Schema Changes:
#1 - Location Schema: "Opening_Time" and "Closing_Time" field types changed from TIME to SMALLINT. This is because Oracle does not have a time datatype that we felt could appropriately represent these two fields.
#2 - Visits schema: Removed "Time" field and changed name of the field "date" to "visitdate". Removed the "Time" field because we didn't feel that we needed to store that information for each patron's visit.
#3 - PatronLeasesLocker schema: Added "LocationID" to schema. This was because Oracle does not allow you to have foreign keys that are not unique in the parent table. Therefore, I added LocationID, so that we could keep Locker_Num as a foreign key.
#4 - Shift: Changed "Start_Time" and "End_Time" field type from TIME to SMALLINT to maintain consistency with our representation of time in other schemas. Using SMALLINT also saves us space.
#5 - StaffWorksShift: Changed "Start_Time" and "End_Time" field type from TIME to SMALLINT to maintain consistency with our representation of time in other schemas. Using SMALLINT also saves us space.
#6 - Room: Made "Room_Type" field into a foreign key of RoomCapacity. Our TA suggested this to us after handing in Milestone 3.
#7 - Renamed attributes Condition in Locker and Room to Locker_Condition and Room_Condition respectively. The XAMPP server did not like the attribute name Condition.
#8 - MembershipExpiry - Added PatronID as a Primary Key as it did not work well with only Start_Date and Amount_Paid as Primary Keys.
